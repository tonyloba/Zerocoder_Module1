Для разработки текстовой боевой игры в стиле Agile мы можем разбить проект на несколько этапов,
каждый из которых будет реализован в рамках короткого спринта. Ниже представлен план проекта,
который включает этапы планирования, разработки и тестирования.

### Этап 1: Планирование и проектирование
- Цель: Определить основные требования и архитектуру игры.
- Длительность: 1 неделя

#### Задачи:
1. Сбор требований: Подтвердить требования к игре и уточнить любые дополнительные детали.
2. Проектирование классов**: Создать UML-диаграммы для классов `Hero` и `Game`.
   - Описать атрибуты и методы каждого класса.
3. Определение спринтов**: Разделить проект на спринты с четко определенными задачами.

### Этап 2: Разработка классов героев
- Цель: Создать и протестировать класс `Hero`.
- Длительность: 1 неделя

#### Задачи:
1. Реализация класса `Hero`:
   - Реализовать атрибуты: `name`, `health`, `attack_power`.
   - Реализовать методы: `attack(other)` и `is_alive()`.
2. Тестирование:
   - Написать юнит-тесты для проверки функциональности класса `Hero`.
   - Убедиться, что метод `attack()` корректно уменьшает здоровье противника.
   - Проверить метод `is_alive()` на герое с различным уровнем здоровья.

### Этап 3: Разработка игрового цикла
- Цель: Создать и протестировать класс `Game`.
- Длительность: 1 неделя

#### Задачи:
1. Реализация класса `Game`:
   - Создать атрибуты: `player`, `computer`.
   - Реализовать метод `start()`, который будет управлять игровым процессом.
2. Тестирование:
   - Написать сценарии для проверки игрового цикла.
   - Убедиться, что игра корректно чередует ходы между игроком и компьютером.
   - Проверить, что игра правильно определяет победителя.

### Этап 4: Улучшение и рефакторинг
- Цель: Улучшить код и добавить дополнительные функции.
- Длительность: 1 неделя

#### Задачи:
1. Рефакторинг:
   - Оптимизировать код для улучшения читаемости и производительности.
   - Внедрить лучшие практики ООП.
2. Дополнительные функции (по возможности):
   - Добавить возможность выбора героев с разными характеристиками.
   - Реализовать систему уровней или опыт.

### Этап 5: Финальное тестирование и релиз
- Цель: Провести финальное тестирование и подготовить игру к релизу.
- Длительность: 1 неделя

#### Задачи:
1. Финальное тестирование:
   - Провести интеграционное тестирование всех компонентов игры.
   - Выполнить регрессионное тестирование, чтобы убедиться, что рефакторинг не нарушил существующую функциональность.
2. Документация:
   - Обновить документацию проекта.
   - Подготовить руководство пользователя.
3. Релиз:
   - Подготовить финальную сборку игры.
   - Опубликовать игру.
